# port
server.port=8088
# database
spring.data.mongodb.uri=mongodb://user:password@localhost:27017/flight_booking?authSource=admin

spring.kafka.producer.bootstrap-servers=localhost:8097,localhost:8098,localhost:8099
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=10
spring.kafka.producer.properties.retry.backoff.ms=1000

#recommended in documentation
spring.kafka.producer.properties.delivery.timeout.ms=120000

spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000
spring.kafka.producer.properties.schema.registry.url=http://127.0.0.1:8081
auto.create.topics.enable=true

#consumer config
spring.kafka.consumer.bootstrap-servers=localhost:8097,localhost:8098,localhost:8099
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.schema.registry.url=http://127.0.0.1:8081

#keycloak
keycloak.client-id=flights-booking-app
jwt.auth.converter.principle-attribute=preferred_username
jwt.auth.converter.resource-id=flights-booking-app

security.jwt.role-prefix=ROLE_
security.jwt.resource-id=flights-booking-app
security.jwt.principal-claim=preferred_username