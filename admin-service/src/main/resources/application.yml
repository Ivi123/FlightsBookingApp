spring:
  data:
    mongodb:
      username: user
      password: password
      host: localhost
      port: 27017
      database: flights-db
      authentication-database: admin
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9081/realms/FlightsBookingApp
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

  #kafka
  kafka:
    bootstrap-servers: localhost:8097,localhost:8098,localhost:8099
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      acks: all
      retries: 10
      properties:
        retry.backoff.ms: 1000
        delivery.timeout.ms: 120000
        linger.ms: 0
        request.timeout.ms: 30000
        schema.registry.url: http://127.0.0.1:8081
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      group-id: admin-group
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: "*"
        schema:
         registry:
          url: http://127.0.0.1:8081
keycloak:
  client-id: flights-booking-app
jwt:
  auth:
    converter:
      resource-id: flights-booking-app
      principle-attribute: preferred_username
