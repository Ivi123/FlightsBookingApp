/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.notificationservice.dto;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class BookingNotification extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1191368118430272031L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BookingNotification\",\"namespace\":\"com.example.notificationservice.dto\",\"fields\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"userEmail\",\"type\":\"string\"},{\"name\":\"bookingId\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BookingNotification> ENCODER =
      new BinaryMessageEncoder<BookingNotification>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BookingNotification> DECODER =
      new BinaryMessageDecoder<BookingNotification>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<BookingNotification> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<BookingNotification> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BookingNotification>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this BookingNotification to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a BookingNotification from a ByteBuffer. */
  public static BookingNotification fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence message;
  @Deprecated public java.lang.CharSequence userEmail;
  @Deprecated public java.lang.CharSequence bookingId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BookingNotification() {}

  /**
   * All-args constructor.
   * @param message The new value for message
   * @param userEmail The new value for userEmail
   * @param bookingId The new value for bookingId
   */
  public BookingNotification(java.lang.CharSequence message, java.lang.CharSequence userEmail, java.lang.CharSequence bookingId) {
    this.message = message;
    this.userEmail = userEmail;
    this.bookingId = bookingId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return message;
    case 1: return userEmail;
    case 2: return bookingId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: message = (java.lang.CharSequence)value$; break;
    case 1: userEmail = (java.lang.CharSequence)value$; break;
    case 2: bookingId = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'message' field.
   * @return The value of the 'message' field.
   */
  public java.lang.CharSequence getMessage() {
    return message;
  }

  /**
   * Sets the value of the 'message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.CharSequence value) {
    this.message = value;
  }

  /**
   * Gets the value of the 'userEmail' field.
   * @return The value of the 'userEmail' field.
   */
  public java.lang.CharSequence getUserEmail() {
    return userEmail;
  }

  /**
   * Sets the value of the 'userEmail' field.
   * @param value the value to set.
   */
  public void setUserEmail(java.lang.CharSequence value) {
    this.userEmail = value;
  }

  /**
   * Gets the value of the 'bookingId' field.
   * @return The value of the 'bookingId' field.
   */
  public java.lang.CharSequence getBookingId() {
    return bookingId;
  }

  /**
   * Sets the value of the 'bookingId' field.
   * @param value the value to set.
   */
  public void setBookingId(java.lang.CharSequence value) {
    this.bookingId = value;
  }

  /**
   * Creates a new BookingNotification RecordBuilder.
   * @return A new BookingNotification RecordBuilder
   */
  public static com.example.notificationservice.dto.BookingNotification.Builder newBuilder() {
    return new com.example.notificationservice.dto.BookingNotification.Builder();
  }

  /**
   * Creates a new BookingNotification RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BookingNotification RecordBuilder
   */
  public static com.example.notificationservice.dto.BookingNotification.Builder newBuilder(com.example.notificationservice.dto.BookingNotification.Builder other) {
    return new com.example.notificationservice.dto.BookingNotification.Builder(other);
  }

  /**
   * Creates a new BookingNotification RecordBuilder by copying an existing BookingNotification instance.
   * @param other The existing instance to copy.
   * @return A new BookingNotification RecordBuilder
   */
  public static com.example.notificationservice.dto.BookingNotification.Builder newBuilder(com.example.notificationservice.dto.BookingNotification other) {
    return new com.example.notificationservice.dto.BookingNotification.Builder(other);
  }

  /**
   * RecordBuilder for BookingNotification instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BookingNotification>
    implements org.apache.avro.data.RecordBuilder<BookingNotification> {

    private java.lang.CharSequence message;
    private java.lang.CharSequence userEmail;
    private java.lang.CharSequence bookingId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.notificationservice.dto.BookingNotification.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.message)) {
        this.message = data().deepCopy(fields()[0].schema(), other.message);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userEmail)) {
        this.userEmail = data().deepCopy(fields()[1].schema(), other.userEmail);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.bookingId)) {
        this.bookingId = data().deepCopy(fields()[2].schema(), other.bookingId);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing BookingNotification instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.notificationservice.dto.BookingNotification other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.message)) {
        this.message = data().deepCopy(fields()[0].schema(), other.message);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userEmail)) {
        this.userEmail = data().deepCopy(fields()[1].schema(), other.userEmail);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.bookingId)) {
        this.bookingId = data().deepCopy(fields()[2].schema(), other.bookingId);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'message' field.
      * @return The value.
      */
    public java.lang.CharSequence getMessage() {
      return message;
    }

    /**
      * Sets the value of the 'message' field.
      * @param value The value of 'message'.
      * @return This builder.
      */
    public com.example.notificationservice.dto.BookingNotification.Builder setMessage(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.message = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'message' field has been set.
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'message' field.
      * @return This builder.
      */
    public com.example.notificationservice.dto.BookingNotification.Builder clearMessage() {
      message = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'userEmail' field.
      * @return The value.
      */
    public java.lang.CharSequence getUserEmail() {
      return userEmail;
    }

    /**
      * Sets the value of the 'userEmail' field.
      * @param value The value of 'userEmail'.
      * @return This builder.
      */
    public com.example.notificationservice.dto.BookingNotification.Builder setUserEmail(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.userEmail = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'userEmail' field has been set.
      * @return True if the 'userEmail' field has been set, false otherwise.
      */
    public boolean hasUserEmail() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'userEmail' field.
      * @return This builder.
      */
    public com.example.notificationservice.dto.BookingNotification.Builder clearUserEmail() {
      userEmail = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'bookingId' field.
      * @return The value.
      */
    public java.lang.CharSequence getBookingId() {
      return bookingId;
    }

    /**
      * Sets the value of the 'bookingId' field.
      * @param value The value of 'bookingId'.
      * @return This builder.
      */
    public com.example.notificationservice.dto.BookingNotification.Builder setBookingId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.bookingId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'bookingId' field has been set.
      * @return True if the 'bookingId' field has been set, false otherwise.
      */
    public boolean hasBookingId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'bookingId' field.
      * @return This builder.
      */
    public com.example.notificationservice.dto.BookingNotification.Builder clearBookingId() {
      bookingId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BookingNotification build() {
      try {
        BookingNotification record = new BookingNotification();
        record.message = fieldSetFlags()[0] ? this.message : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.userEmail = fieldSetFlags()[1] ? this.userEmail : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.bookingId = fieldSetFlags()[2] ? this.bookingId : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BookingNotification>
    WRITER$ = (org.apache.avro.io.DatumWriter<BookingNotification>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BookingNotification>
    READER$ = (org.apache.avro.io.DatumReader<BookingNotification>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
